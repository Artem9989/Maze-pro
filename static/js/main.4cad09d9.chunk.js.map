{"version":3,"sources":["redux/maze-reducer.js","redux/redux-store.js","components/Step.jsx","components/cell.jsx","components/board.jsx","components/maze.jsx","components/MazeContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["MAZE_VALUE","initialState","startSquare","steps","currentSquare","startIcon","resultIcon","resultText","gamePoints","getMazeValue","field","value","type","payload","MazeReducer","state","action","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","current","Cell","handleRegionClick","MazeValue","userClick","disabledSquare","className","disabled","onClick","Board","props","handlechange","setuserClick","setdisabledSquare","setstartGameText","renderCell","id","setTimeout","possibleSteps","Steps","getRandomIndex","Math","floor","random","length","setCurrentStep","direction","a","useEffect","index","setArrow","step","map","Maze","useState","startGameText","squares","disabledStart","setdisabledStart","i","startGame","Step","memo","MazeContainer","this","React","Component","compose","connect","AppContainer","params","MazePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cad09d9.chunk.js","sourcesContent":["const MAZE_VALUE = \"MAZE_VALUE\";\r\n\r\nlet initialState = {\r\n  startSquare: null,\r\n  steps: [],\r\n  currentSquare: null,\r\n  startIcon: 'Z',\r\n  resultIcon: '💣',\r\n  resultText: '',\r\n  gamePoints: 0,\r\n\r\n};\r\n\r\nconst MazeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MAZE_VALUE:\r\n\r\n      return {\r\n        ...state,\r\n        [action.payload.field]: action.payload.value\r\n\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getMazeValue = ( field, value) => ({\r\n  type: MAZE_VALUE,\r\n   payload: {\r\n     field,\r\n     value\r\n   } \r\n});\r\n\r\n\r\n\r\n\r\nexport default MazeReducer;\r\n","import { createStore, applyMiddleware,combineReducers } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport MazeReducer from './maze-reducer';\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    MazeReducer\r\n  });\r\n  \r\n  \r\n  \r\nconst store = createStore(reducers,(applyMiddleware(thunkMiddleware)\r\n    ));\r\n  // saga.run(sagaWatcher);\r\n  window.store = store;\r\n  \r\n  //let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n  \r\n  export default store;","import React, {  useEffect } from \"react\";\r\n\r\nconst possibleSteps = [\r\n  [2, 3], // для первой ячейки\r\n  [0, 2, 3], // для второй ячейки\r\n  [0, 3],\r\n  [1, 2, 3],\r\n  [0, 1, 2, 3],\r\n  [0, 1, 3],\r\n  [1, 2],\r\n  [0, 1, 2],\r\n  [0, 1],\r\n];\r\n\r\nlet current;\r\nconst Steps = ({ MazeValue, handlechange }) => {\r\n\r\n  const getRandomIndex = (value) =>\r\n    Math.floor(Math.random() * possibleSteps[value].length);\r\n\r\n  const setCurrentStep = async (direction) => {\r\n    switch (direction) {\r\n      case 0:\r\n        current = current - 1;\r\n        break;\r\n      case 1:\r\n        current = current - 3;\r\n        break;\r\n      case 2:\r\n        current = current + 1;\r\n        break;\r\n      case 3:\r\n        current = current + 3;\r\n        break;\r\n        default: break;\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeof MazeValue.startSquare === \"number\") {\r\n      handlechange(\"steps\", []);\r\n      const index = getRandomIndex(MazeValue.startSquare);\r\n      const direction = possibleSteps[MazeValue.startSquare][index];\r\n      current = MazeValue.startSquare;\r\n      handlechange(\"steps\", [direction]);\r\n      setCurrentStep(direction);\r\n    }\r\n  }, [MazeValue.startSquare]);\r\n\r\n  useEffect(() => {\r\n    if (MazeValue.steps.length < 10 && MazeValue.steps.length > 0) {\r\n      setTimeout(() => {\r\n        const index = getRandomIndex(current);\r\n        const direction = possibleSteps[current][index];\r\n\r\n        handlechange(\"steps\", [...MazeValue.steps, direction]);\r\n        setCurrentStep(direction);\r\n        handlechange(\"currentSquare\", current);\r\n      }, 1000);\r\n    }\r\n  }, [MazeValue.steps]);\r\n\r\n  const setArrow = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <span className=\"arrow\"> ← </span>\r\n      case 1:\r\n        return <span className=\"arrow\"> ↑ </span>\r\n      case 2:\r\n        return <span className=\"arrow\"> → </span>\r\n      case 3:\r\n        return <span className=\"arrow\"> ↓ </span>\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"board-row\">\r\n        {MazeValue.steps.map((step, index) => {\r\n          if (index < 5)\r\n            return (\r\n              <div className=\"square-arrow\" key={index}>\r\n                \r\n                 {setArrow(step)} \r\n              </div>\r\n            );\r\n        })}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {MazeValue.steps.map((step, index) => {\r\n          if (index >= 5)\r\n            return (\r\n              <div className=\"square-arrow\" key={index}>\r\n                \r\n                {setArrow(step)} \r\n              </div>\r\n            );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Steps;\r\n","import React from \"react\";\r\n\r\nconst Cell = ({\r\n  value,\r\n  handleRegionClick,\r\n  MazeValue,\r\n  startSquare,\r\n  startIcon,\r\n  userClick,\r\n  resultIcon,\r\n  currentSquare,\r\n  disabledSquare,\r\n  ...props\r\n}) => {\r\n\r\n  if (value === startSquare) {\r\n    return (\r\n      <button\r\n        className=\"square\"\r\n        key={value}\r\n        disabled={disabledSquare}\r\n        onClick={() => handleRegionClick(value)}\r\n      >\r\n        \r\n        {startIcon}\r\n      </button>\r\n    );\r\n  } else if (value === currentSquare) {\r\n    return (\r\n      <button\r\n        className=\"square\"\r\n        key={value}\r\n        disabled={disabledSquare}\r\n        onClick={() => handleRegionClick(value)}\r\n      >\r\n        \r\n        {userClick ? \"💥\" : resultIcon}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button\r\n        className=\"square\"\r\n        key={value}\r\n        disabled={disabledSquare}\r\n        onClick={() => handleRegionClick(value)}\r\n      >\r\n        {\"💣\"}\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport Cell from \"./cell.jsx\";\r\n\r\nconst Board = (\r\n  { handlechange, MazeValue,  userClick, setuserClick,disabledSquare,setdisabledSquare, setstartGameText },\r\n  props\r\n) => {\r\n  const renderCell = (value) => {\r\n    return (\r\n      <Cell\r\n        currentSquare={MazeValue.currentSquare}\r\n        value={value}\r\n        handleRegionClick={handleRegionClick}\r\n        startSquare={MazeValue.startSquare}\r\n        startIcon={MazeValue.startIcon}\r\n        resultIcon={MazeValue.resultIcon}\r\n        userClick={userClick}\r\n        disabledSquare={disabledSquare}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleRegionClick = (id) => {\r\n    setdisabledSquare(true)\r\n    if (MazeValue.currentSquare === id) {\r\n      if (id === MazeValue.startSquare) {\r\n        handlechange(\"startIcon\", \"🤖\");\r\n      }\r\n\r\n      handlechange(\"resultIcon\", \"🤖\");\r\n      setuserClick(false);\r\n      handlechange(\"resultText\", `Поздравляю с победой`);\r\n   \r\n      setstartGameText('Продолжить')\r\n      handlechange(\"gamePoints\", MazeValue.gamePoints+1)\r\n    }\r\n    else if (MazeValue.currentSquare === null){ \r\n        handlechange(\r\n            \"resultText\",\r\n            `Вы не начали игру :)`\r\n          );\r\n    }\r\n    else {\r\n        if (id === MazeValue.startSquare) {\r\n            handlechange(\"startIcon\", \"💥\");\r\n         }\r\n      handlechange(\"resultIcon\", \"💥\");\r\n      setuserClick(true);\r\n      handlechange(\r\n        \"resultText\",\r\n        `К сожалению вы проигрыли, правильный блок на ${MazeValue.currentSquare + 1} ячейке`\r\n      );\r\n      setstartGameText('Начать сначала')\r\n      handlechange(\"gamePoints\", 0)\r\n    }\r\n    setTimeout (() => {\r\n      handlechange(\"currentSquare\", null)\r\n    },10000)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board-row\">\r\n        {renderCell(0)}\r\n        {renderCell(1)}\r\n        {renderCell(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderCell(3)}\r\n        {renderCell(4)}\r\n        {renderCell(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderCell(6)}\r\n        {renderCell(7)}\r\n        {renderCell(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState, memo } from \"react\";\r\nimport Board from \"./board.jsx\";\r\nimport Step from \"./Step.jsx\";\r\n\r\nconst possibleSteps = [\r\n  [2, 3], // для первой ячейки\r\n  [0, 2, 3], // для второй ячейки\r\n  [0, 3],\r\n  [1, 2, 3],\r\n  [0, 1, 2, 3],\r\n  [0, 1, 3],\r\n  [1, 2],\r\n  [0, 1, 2],\r\n  [0, 1],\r\n];\r\n\r\nconst Maze = ({ getMazeValue, MazeValue }, props) => {\r\n  const [userClick, setuserClick] = useState(false);\r\n  const [startGameText, setstartGameText] = useState('Начать игру')\r\n\r\n  const handlechange = (field, value) => {\r\n    getMazeValue(field, value);\r\n  };\r\n  const [squares, setsquares] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8]);\r\n  const [disabledSquare, setdisabledSquare] = useState(false)\r\n  const [disabledStart, setdisabledStart] = useState(false)\r\n  const startGame = () => {\r\n    setuserClick(false);\r\n    setdisabledStart(true);\r\n    setdisabledSquare(true);\r\n    setTimeout(() => {\r\n        setdisabledStart(false);\r\n        setdisabledSquare(false);\r\n    },11000)\r\n    \r\n    handlechange(\"steps\", []);\r\n    let i = Math.floor(Math.random() * Math.floor(9));\r\n    handlechange(\"startSquare\", i);\r\n    handlechange(\"resultIcon\", \"💣\");\r\n    handlechange(\"startIcon\", \"👾\");\r\n    handlechange(\r\n        \"resultText\",\r\n        `Найдите правильную ячейку`\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h1>Привет, друг! </h1>\r\n      <h3 className=\"game-text\"> Помоги мне найти моего робота! Только осторожно, если ты ошибёшься, бомба может взорваться.</h3>\r\n      <span className=\"game-rules\">Правила игры: Инопланетянин - начальная точка. Необходимо от него проложить путь в уме по стрелкам и выбрать место, куда он приземлится. Если бомба взорвалась, ты теряешь все очки, а если нет, то прибавляется 1 очко.</span>\r\n\r\n      <h1>Ваши очки {MazeValue.gamePoints}</h1>\r\n      <div className=\"game-start-btn-container\"> \r\n        <button className=\"game-start-btn\" disabled={disabledStart} onClick={() => startGame()}> {startGameText}</button>\r\n    </div>\r\n    <div className=\"game-container-text\"> \r\n      <span className=\"game-text\"> {MazeValue.resultText}</span>\r\n    </div>\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={squares}\r\n            MazeValue={MazeValue}\r\n            handlechange={handlechange}\r\n            userClick={userClick}\r\n            setuserClick={setuserClick}\r\n            disabledSquare={disabledSquare}\r\n            setdisabledSquare={setdisabledSquare}\r\n            setstartGameText={setstartGameText}\r\n          />\r\n        </div>\r\n        <div className=\"game-board-steps\">\r\n          <Step MazeValue={MazeValue} handlechange={handlechange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Maze);\r\n","import React from \"react\";\r\nimport MazeReducer from \"../redux/maze-reducer\";\r\nimport { getMazeValue } from \"../redux/maze-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nimport Maze from \"./maze.jsx\";\r\n\r\nclass MazeContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Maze\r\n          MazeValue={this.props.MazeValue}\r\n          getMazeValue={this.props.getMazeValue}\r\n          MazeReducer={this.props.MazeReducer}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    MazeValue: state.MazeReducer,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getMazeValue,\r\n    MazeReducer,\r\n  })\r\n)(MazeContainer);\r\n","import './App.css';\r\nimport {Provider, connect} from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {getMazeValue} from './redux/maze-reducer'\r\nimport store from './redux/redux-store.js'\r\nimport MazeContainer from './components/MazeContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MazeContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  params: state\r\n})\r\nlet AppContainer = compose( connect(mapStateToProps, { getMazeValue }))(App);\r\n  \r\n\r\nconst MazePage = (props) => {\r\n\treturn <Provider store={store}>\r\n\t\t<AppContainer />\r\n\t  </Provider>\r\n\r\n\r\n  }\r\n  export default MazePage;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}